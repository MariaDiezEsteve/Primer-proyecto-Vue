{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Componentes del Grupo:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AboutUs = _resolveComponent(\"AboutUs\");\n  const _component_ToolsDevelop = _resolveComponent(\"ToolsDevelop\");\n  const _component_CounterTimes = _resolveComponent(\"CounterTimes\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_AboutUs), _createCommentVNode(\" 3. Llamamos al componente aquí para que se muestre en el template HTML \"), _createVNode(_component_ToolsDevelop, {\n    editor: $setup.editor,\n    controlVersiones: $setup.controlVersiones,\n    trabajoColaborativo: $setup.trabajoColaborativo\n  }, null, 8 /* PROPS */, [\"editor\", \"controlVersiones\", \"trabajoColaborativo\"]), _createCommentVNode(\" PROPS Esta sería la manera de enviar la información del script mediante props al componente hijo ToolsDevelop \"), _createVNode(_component_CounterTimes, {\n    getLessData: $setup.getLessData,\n    downOne: $setup.downOne\n  }, null, 8 /* PROPS */, [\"getLessData\", \"downOne\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createVNode","_component_AboutUs","_createCommentVNode","_component_ToolsDevelop","editor","$setup","controlVersiones","trabajoColaborativo","_component_CounterTimes","getLessData","downOne"],"sources":["/home/penascalf5/Documentos/Vue3 - Proyecto/Primer-proyecto-Vue/src/App.vue"],"sourcesContent":["<template>\n  <h1>Componentes del Grupo:</h1>\n  <AboutUs /> <!-- 3. Llamamos al componente aquí para que se muestre en el template HTML -->\n  <ToolsDevelop :editor=\"editor\" :controlVersiones=\"controlVersiones\" :trabajoColaborativo=\"trabajoColaborativo\"/> <!-- PROPS Esta sería la manera de enviar la información del script mediante props al componente hijo ToolsDevelop -->\n  <CounterTimes :getLessData=\"getLessData\" :downOne =\"downOne\"/>\n\n</template>\n\n<script>\n\n/* Para importar nuestro componente AboutUs */\n\nimport AboutUs from './components/AboutUs' // 1. Importamos nuestro componente para poder llamarlo en el export y Template\nimport ToolsDevelop from './components/ToolsDevelop.vue'; \nimport CounterTimes from './components/CounterTimes.vue';\n\nimport {ref} from \"vue\";\n\nexport default {\ncomponents: {\n  AboutUs, // 2. Exportamos nuestro componente para poder utilizarlo en la parte de Template\n  ToolsDevelop,\n  CounterTimes,\n},\n\nsetup(){ // PROPS - Esta información se va a pasar al componente hijo - Tools Develop para que se renderice en ese componente.\n  const editor = \" VSCode\";\n  const controlVersiones = \"GIT\";\n  const trabajoColaborativo = \"Trello\";\n\n  let downOne = ref(50);\n\n  const getLessData = () => {\n    downOne.value --;\n  }\n\n\n\n  return{\n    editor,\n    controlVersiones,\n    trabajoColaborativo,\n    getLessData,\n    downOne,\n  }\n}\n\n\n}\n</script>\n\n\n<style>\n\n</style>"],"mappings":";gCACEA,mBAAA,CAA+B,YAA3B,wBAAsB;;;;;;6DAA1BC,UAA+B,EAC/BC,YAAA,CAAWC,kBAAA,GAACC,mBAAA,4EAA+E,EAC3FF,YAAA,CAAgHG,uBAAA;IAAjGC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAGE,gBAAgB,EAAED,MAAA,CAAAC,gBAAgB;IAAGC,mBAAmB,EAAEF,MAAA,CAAAE;kFAAuBL,mBAAA,mHAAsH,EACvOF,YAAA,CAA8DQ,uBAAA;IAA/CC,WAAW,EAAEJ,MAAA,CAAAI,WAAW;IAAGC,OAAO,EAAGL,MAAA,CAAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}