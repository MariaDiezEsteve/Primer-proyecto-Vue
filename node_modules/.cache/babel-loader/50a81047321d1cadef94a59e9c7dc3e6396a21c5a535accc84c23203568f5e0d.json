{"ast":null,"code":"import { ref } from \"vue\"; //4. Necesitamos ref (una función predeterminada de VUE) para renderizar el valor del contador y que aparezca en el botón\nexport default {\n  setup() {\n    let count = ref(0); // 2. Crear una variable let ya que const sería una constante no podría variar su valor.\n    // 5. Inicializamos la variable count con ref, y le decimos que incialice con el valor 0\n\n    const getData = () => {\n      // 3. Crear una variable con una función anónima\n      count.value++; // 6. Para poder acceder al valor de count tenemos que incluir .value\n      console.log(count);\n      // RefImpl {__v_isShallow: false, dep: Set(1), __v_isRef: true, _rawValue: 1, _value: 1}\n      //     dep : Set(1) {ReactiveEffect}\n      //     __v_isRef : true\n      //     __v_isShallow : false\n      //     _rawValue : 1\n      //     _value :  1\n      //     value (...)\n      //     [[Prototype]] : Object\n    };\n\n    return {\n      count,\n      getData\n    };\n  }\n};","map":{"version":3,"names":["ref","setup","count","getData","value","console","log"],"sources":["C:\\Users\\dieze\\PeñascalF5\\Vue Proyecto\\Primer-proyecto-Vue\\src\\components\\CounterTimes.vue"],"sourcesContent":["<template>\r\n  <h1>Contador - Evento onClick</h1>\r\n  <button @click=\"getData\"> It was click <span>{{ count }}</span> times</button> <!-- 1. Crear el evento click, y llamar a la función. También se podría crear v-on:click=\"\" -->\r\n</template>\r\n\r\n<script>\r\n import {ref} from \"vue\"; //4. Necesitamos ref (una función predeterminada de VUE) para renderizar el valor del contador y que aparezca en el botón\r\n    export default {\r\n        setup(){\r\n\r\n            let count = ref(0); // 2. Crear una variable let ya que const sería una constante no podría variar su valor.\r\n                                // 5. Inicializamos la variable count con ref, y le decimos que incialice con el valor 0\r\n\r\n            const getData = () => { // 3. Crear una variable con una función anónima\r\n                count.value ++;  // 6. Para poder acceder al valor de count tenemos que incluir .value\r\n                console.log(count)\r\n                // RefImpl {__v_isShallow: false, dep: Set(1), __v_isRef: true, _rawValue: 1, _value: 1}\r\n                //     dep : Set(1) {ReactiveEffect}\r\n                //     __v_isRef : true\r\n                //     __v_isShallow : false\r\n                //     _rawValue : 1\r\n                //     _value :  1\r\n                //     value (...)\r\n                //     [[Prototype]] : Object\r\n            }\r\n\r\n            return{\r\n                count, \r\n                getData            \r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style>\r\nspan{\r\n    color: red;\r\n}\r\n</style>"],"mappings":"AAMC,SAAQA,GAAG,QAAO,KAAK,EAAE;AACtB,eAAe;EACXC,KAAKA,CAAA,EAAE;IAEH,IAAIC,KAAI,GAAIF,GAAG,CAAC,CAAC,CAAC,EAAE;IACA;;IAEpB,MAAMG,OAAM,GAAIA,CAAA,KAAM;MAAE;MACpBD,KAAK,CAACE,KAAI,EAAI,EAAG;MACjBC,OAAO,CAACC,GAAG,CAACJ,KAAK;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;;IAEA,OAAM;MACFA,KAAK;MACLC;IACJ;EACJ;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}